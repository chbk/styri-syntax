.syntax--source.syntax--css {
  color: @syntax-color-css-selector;

  // comments
  .syntax--comment {
    color: @syntax-color-comment;
    font-style: italic;
  }

  // : ; (), not "", not /*, not #
  .syntax--punctuation:not(.syntax--string):not(.syntax--comment):not(.syntax--constant) {
    color: @syntax-color-punctuation;
  }

  // [less] ()
  .syntax--brace {
    color: @syntax-color-punctuation;
  }

  // + > ~
  .syntax--operator {
    color: @syntax-color-punctuation;

    // and not
    &.syntax--logical, &.syntax--control {
      color: @syntax-color-css-pseudo-selector;
    }
  }

  .syntax--at-rule {

    // @media @import
    .syntax--control {
      color: @syntax-color-css-at-rule;
    }

    // screen tv
    .syntax--constant.syntax--media {
      color: @syntax-color-css-at-rule;
    }
  }

  .syntax--selector {

    // *
    .syntax--wildcard {
      color: @syntax-color-punctuation;
    }

    // :nth-child(even)
    .syntax--constant {
      color: @syntax-color-css-pseudo-selector;
    }
  }

  // :nth-child :before
  .syntax--pseudo-class, .syntax--pseudo-element {
    color: @syntax-color-css-pseudo-selector;
  }

  // [attribute=value]
  .syntax--attribute-selector {

    // attribute
    .syntax--attribute-name {
      color: @syntax-color-css-property;
    }

    // value
    .syntax--attribute-value {
      color: @syntax-color-css-value;
    }
  }

  // position margin
  .syntax--property-name {
    color: @syntax-color-css-property;
  }

  // none relative
  .syntax--property-value {
    color: @syntax-color-css-value;
  }

  // "stylesheet.css" #fafafa url('link')
  .syntax--quoted, .syntax--constant, .syntax--function {
    color: @syntax-color-css-value;
  }

  // !important
  .syntax--important {
    color: @syntax-color-css-important;
  }

  // [less] @variable, not function(parameter)
  .syntax--variable:not(.syntax--parameter) {
    color: @syntax-color-css-variable;
  }
}
